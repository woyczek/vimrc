syn on
set background=dark
set modeline
se et
se ts=2
se shiftwidth=2
ret
execute pathogen#infect()
set noai
nnoremap S "_diwP

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
autocmd WinEnter * if &buftype ==# 'quickfix' && winnr('$') == 1 | quit | endif

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_perl_checkers = ['perl']
let g:syntastic_always_populate_loc_list = 1 
let g:syntastic_auto_loc_list = 1 
let g:syntastic_check_on_open = 1 
let g:syntastic_check_on_wq = 1 
let g:syntastic_enable_highlighting = 1 
let g:syntastic_puppet_checkers = ['puppet', 'puppetlint', 'puppet-lint'] 
let g:syntastic_puppet_puppetlint_args = '--no-autoloader_layout-check' 
let g:syntastic_ruby_checkers = ['mri', 'rubocop'] 
let g:syntastic_yaml_checkers = ['yamllint']
let g:syntastic_yaml_yamllint_args = '-c ~/.vim/yamllint.yml'
let g:syntastic_enable_perl_checker = 1
let g:syntastic_python_checkers = ['python', 'flake8']
let g:pymode_options_max_line_length = 120

let g:syntastic_python_flake8_args  = '--ignore="E501,E305,E302"'
let g:syntastic_quiet_messages = {
       \ "regex":   '\[arrow_alignment\]',
       \ "file:p":  ['\m\c\.p$'] }

au FileType python setl nu
set mouse=a

" see :h syntastic-loclist-callback
function! SyntasticCheckHook(errors)
    if !empty(a:errors)
        let g:syntastic_loc_list_height = min([len(a:errors), 10])
    endif
endfunction

